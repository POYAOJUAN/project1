[["index.html", "社會科學統計方法 Chapter 1 資料讀取 1.1 設定路徑 1.2 前置作業 1.3 讀取 CSV 1.4 讀取 TXT 1.5 讀取 STATA 1.6 讀取 SPSS 1.7 讀取網路 CSV 1.8 其他讀取問題", " 社會科學統計方法 PO-YAO JUAN 2021-03-10 Chapter 1 資料讀取 資料讀取會依照不同的資料型態有不同的套件讀取方式。 base R readr：.csv and .txt readxl：.xls or .xlsx haven foreign sjlabelled：.sav (SPSS) readstata13：.dta (STATA) 1.1 設定路徑 getwd() setwd(&quot;C:/Users/Juan/Desktop/rproject/rproject&quot;) 1.2 前置作業 library(tidyverse) NOTE： 因為載入tidyverse套件出現的衝突訊息表示它複寫了基礎R的一些函式，如果你想要使用stats裡面的filter()以及lag()這兩個函式，則必須使用其完整名稱stats::filter()以及stats::lag()。 1.3 讀取 CSV 根據R for Data Science by Garrett Grolemund, Hadley Wickham: Data Import作者描述。 readr套件與Base R做比較有以下三個優點： 效率更高(大約10倍) 會產生tibbles，且不會將字元向量轉為因子(factor)，或使用資料列名稱，或是亂改資料欄名稱。 基礎R的函式會從你的作業系統與環境變數繼承一些行為，所以在你的電腦上可運作的資料匯入程式碼在別人的電腦上可能行不通。 readr套件的函式： read_csv()：讀取逗號分隔檔 read_csv2()：讀取分號分隔檔 (因為有許多國家使用 , 為小數點使用) read_tsv()：讀取tab分隔檔 read_delim()：讀取任何分隔符號 read.csv ## function (file, header = TRUE, sep = &quot;,&quot;, quote = &quot;\\&quot;&quot;, dec = &quot;.&quot;, ## fill = TRUE, comment.char = &quot;&quot;, ...) ## read.table(file = file, header = header, sep = sep, quote = quote, ## dec = dec, fill = fill, comment.char = comment.char, ...) ## &lt;bytecode: 0x000001a7789e2ff8&gt; ## &lt;environment: namespace:utils&gt; readr::read_csv ## function (file, col_names = TRUE, col_types = NULL, locale = default_locale(), ## na = c(&quot;&quot;, &quot;NA&quot;), quoted_na = TRUE, quote = &quot;\\&quot;&quot;, comment = &quot;&quot;, ## trim_ws = TRUE, skip = 0, n_max = Inf, guess_max = min(1000, ## n_max), progress = show_progress(), skip_empty_rows = TRUE) ## { ## tokenizer &lt;- tokenizer_csv(na = na, quoted_na = quoted_na, ## quote = quote, comment = comment, trim_ws = trim_ws, ## skip_empty_rows = skip_empty_rows) ## read_delimited(file, tokenizer, col_names = col_names, col_types = col_types, ## locale = locale, skip = skip, skip_empty_rows = skip_empty_rows, ## comment = comment, n_max = n_max, guess_max = guess_max, ## progress = progress) ## } ## &lt;bytecode: 0x000001a77a4f6fa8&gt; ## &lt;environment: namespace:readr&gt; a &lt;- read.csv(&quot;C:/Users/Juan/Desktop/rproject/councilor.csv&quot;) class(a) ## [1] &quot;data.frame&quot; b &lt;- readr::read_csv(&quot;C:/Users/Juan/Desktop/rproject/councilor.csv&quot;, locale = locale(encoding = &quot;big5&quot;)) class(b) ## [1] &quot;spec_tbl_df&quot; &quot;tbl_df&quot; &quot;tbl&quot; &quot;data.frame&quot; 如果想要了解更多請參考R for Data Science by Garrett Grolemund, Hadley Wickham: Data Import 1.4 讀取 TXT students &lt;- read.table(&quot;C:/Users/Juan/Desktop/rproject/Studentsfull.txt&quot;, header=T) students_csv &lt;- read.csv(&quot;C:/Users/Juan/Desktop/rproject/Studentsfull.txt&quot;) student_delim &lt;- read.delim(&quot;C:/Users/Juan/Desktop/rproject/Studentsfull.txt&quot;) students_csv_ed &lt;- read.csv(&quot;C:/Users/Juan/Desktop/rproject/Studentsfull.txt&quot;, sep = &quot;&quot;) student_delim_ed &lt;- read.delim(&quot;C:/Users/Juan/Desktop/rproject/Studentsfull.txt&quot;, sep = &quot;&quot;) NOTE： 這邊的用意其實是想要告訴各位，讀取方式其實不一定局限於某幾個函數，而主要是依照資料內容而定。 1.5 讀取 STATA c &lt;- readstata13::read.dta13(&quot;C:/Users/Juan/Desktop/rproject/Mystata.dta&quot;) dplyr::glimpse(c) #faster and clearer than `str()` ## Rows: 1,244 ## Columns: 21 ## $ Q1 &lt;int&gt; 0, 0, 12, 1, 0, 0, 1, 0, 0, 11, 0, 3, 2, ~ ## $ Q2 &lt;int&gt; 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2,~ ## $ Q3 &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 98, 96, 1, 1, 1, 96,~ ## $ Q4 &lt;int&gt; 2, 2, 1, 3, 1, 4, 4, 98, 3, 3, 2, 98, 2, ~ ## $ Q5 &lt;int&gt; 2, 3, 2, 2, 2, 2, 3, 2, 3, 2, 3, 2, 3, 2,~ ## $ SEX &lt;int&gt; 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2,~ ## $ AGE &lt;int&gt; 2, 4, 5, 5, 4, 4, 2, 5, 1, 2, 2, 2, 5, 5,~ ## $ EDU &lt;int&gt; 5, 3, 2, 3, 3, 3, 4, 3, 5, 3, 5, 4, 2, 2,~ ## $ TOWNID &lt;int&gt; 6305, 6608, 6302, 911, 904, 6628, 6304, 6~ ## $ AREAR &lt;int&gt; 1, 4, 1, 5, 5, 4, 1, 5, 1, 2, 3, 2, 1, 1,~ ## $ SENGI &lt;int&gt; 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2,~ ## $ T_Cidentity &lt;int&gt; 1, 2, 1, 1, 3, 3, 2, 9, 9, 3, 2, 2, 1, 1,~ ## $ partyid &lt;fct&gt; DPP, Independent, KMT, KMT, KMT, KMT, DK,~ ## $ PARTY &lt;int&gt; 5, 99, 2, 3, 2, 2, 99, 99, 99, 99, 2, 99,~ ## $ tondu &lt;int&gt; 3, 4, 2, 4, 4, 2, 3, 9, 3, 4, 3, 4, 3, 4,~ ## $ tondu3 &lt;int&gt; 2, 2, 1, 2, 2, 1, 2, 9, 2, 2, 2, 2, 2, 2,~ ## $ peace &lt;dbl&gt; 8, 4, 5, 4, 4, 6, 5, NA, 7, 8, 6, 4, 6, 5~ ## $ visit &lt;dbl&gt; 0, 0, 12, 1, 0, 0, 1, 0, 0, 11, 0, 3, 2, ~ ## $ experience &lt;dbl&gt; 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,~ ## $ tondu3_new &lt;dbl&gt; 1, 1, 2, 1, 1, 2, 1, NA, 1, 1, 1, 1, 1, 1~ ## $ consensus &lt;dbl&gt; 2, 4, 4, 3, 4, 3, 2, NA, 2, 4, 3, 3, 1, 2~ 1.6 讀取 SPSS d1 &lt;- foreign::read.spss(&quot;C:/Users/Juan/Desktop/rproject/PP0797B2.sav&quot;, reencode = &quot;utf-8&quot;, #not `fileEncoding` to.data.frame = T, use.value.labels=F) ## re-encoding from utf-8 class(d1) ## [1] &quot;data.frame&quot; e1 &lt;- haven::read_sav(&quot;C:/Users/Juan/Desktop/rproject/PP0797B2.sav&quot;, encoding = &quot;utf-8&quot;) #not `fileEncoding` class(e1) ## [1] &quot;tbl_df&quot; &quot;tbl&quot; &quot;data.frame&quot; NOTE： haven套件並不會讀取資料中的中文標記。 1.7 讀取網路 CSV 我們可以用函式讀取網路資料，以read.csv(“PATH/Website”)表示。 以紐西蘭政府資料為例：stat.govt.nz f1 &lt;- read.csv(&quot;https://www.stats.govt.nz/assets/Uploads/Annual-enterprise-survey/Annual-enterprise-survey-2019-financial-year-provisional/Download-data/annual-enterprise-survey-2019-financial-year-provisional-size-bands-csv.csv&quot;) 當然我們也可以嘗試抓取網路ZIP解壓縮檔。GDELT Events 1.0資料庫 step one temp &lt;- tempfile() urlfile &lt;- c(&quot;http://data.gdeltproject.org/events/20210306.export.CSV.zip&quot;) download.file(urlfile,temp, mode = &quot;wb&quot;) unzip(temp, &quot;20210306.export.CSV&quot;) step two online_dt &lt;- read.delim(&quot;20210306.export.CSV&quot;) 1.8 其他讀取問題 dt &lt;- read.csv(&quot;20210306.export.CSV&quot;, sep = &quot;\\t&quot;) dim(dt) ## [1] 84412 58 dt2 &lt;- read.delim(&quot;20210306.export.CSV&quot;) dim(dt2) ## [1] 84412 58 dt3 &lt;- read.table(&quot;20210306.export.CSV&quot;, sep = &quot;\\t&quot;, fill = T) #cannot read without `fill=T` dim(dt3) ## [1] 45100 58 以上我們可以很明顯發現dt3有些資料並沒有完全讀到(讀取漏行的問題)，並在加入quote參數後解決。 dt4 &lt;- read.table(&quot;20210306.export.CSV&quot;, sep = &quot;\\t&quot;, fill = T, quote = &quot;&quot;) dim(dt4) ## [1] 84413 58 檢查資料方式可以透過count.fields()檢查。 nfields1 &lt;- count.fields(&quot;20210306.export.CSV&quot;, sep=&quot;\\t&quot;) nfields1 nfields2 &lt;- count.fields(&quot;20210306.export.CSV&quot;, sep=&quot;\\t&quot;, quote = &quot;&quot;) nfields2 關於read.table()與read.delim()讀取行數問題詳細討論可以參照：Link "],["the-pool-of-tears.html", "Chapter 2 The pool of tears", " Chapter 2 The pool of tears "],["a-caucus-race-and-a-long-tale.html", "Chapter 3 A caucus-race and a long tale", " Chapter 3 A caucus-race and a long tale "]]
